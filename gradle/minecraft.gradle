def doCmd(s) {
	try {
		s.execute(null, file('.')).text.trim()
	} catch(e) {
		[text:'null']
	}
}
ext.gitRevision = doCmd('git rev-list --count HEAD')
ext.gitHash = doCmd('git rev-parse --short HEAD')

targetCompatibility = 1.8
sourceCompatibility = 1.8

minecraft {
	def v = '1.8.9'
	if ('forgever' in project.properties)
		v += "-$forgever"
	version = v
	mappings = 'stable_22'
	runDir = rootProject.file('run')

	if (plugins.hasPlugin('net.minecraftforge.gradle.tweaker-client'))
		tweakClass = 'com.mumfrey.liteloader.launch.LiteLoaderTweaker'
}
processResources {
	def map = [
		version:project.version,
		mcversion:project.minecraft.version,
		revision:project.gitRevision
	]
	def tokens = ['litemod.json']

	// this will ensure that this task is redone when the versions change.
	inputs.properties map
	// replace stuff in mcmod.info, nothing else
	from(sourceSets.main.resources.srcDirs) {
		include tokens
		// replace
		expand map
	}

	// copy everything else, thats not the mcmod.info
	from(sourceSets.main.resources.srcDirs) {
		exclude tokens
	}
}
afterEvaluate {
	// remove the manifest after fg adds the TweakClass attribute
	jar.manifest.attributes.remove 'TweakClass'
	tasks.withType(Jar){
		exclude 'dummyThing'
		manifest {
			attributes 'Implementation-Version': "$version (git $gitHash)"
		}
	}
}